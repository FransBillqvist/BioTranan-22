// <auto-generated />
using System;
using Domain.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BioContext))]
    [Migration("20220419092451_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Domain.Entity.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookedUses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Director")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Native")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfUses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Plot")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<double>("RatingValue")
                        .HasColumnType("REAL");

                    b.Property<int>("Runtime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Texted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedUses = 0,
                            Country = "USA",
                            Director = "Frank Darabont",
                            Genre = "Crime, Drama",
                            Native = "English",
                            NumberOfUses = 5,
                            Plot = "Two imprisoned persons attempt to escape from a maximum security stockade. The last hope for both their release is a double-crossing executioner who has been missing for 30 years.",
                            Rating = "R",
                            RatingValue = 9.3000000000000007,
                            Runtime = 142,
                            Texted = "Svenska",
                            Title = "The Shawshank Redemption",
                            Year = 1994
                        },
                        new
                        {
                            Id = 2,
                            BookedUses = 0,
                            Country = "USA",
                            Director = "Francis Ford Coppola",
                            Genre = "Crime, Drama",
                            Native = "English",
                            NumberOfUses = 5,
                            Plot = "The New York Mafia",
                            Rating = "R",
                            RatingValue = 9.1999999999999993,
                            Runtime = 175,
                            Texted = "English, Svenska",
                            Title = "The Godfather",
                            Year = 1972
                        });
                });

            modelBuilder.Entity("Domain.Entity.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsValid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReservationCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SeatsBooked")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShowId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "JanneBonde@hitman.com",
                            IsValid = true,
                            ReservationCode = "ABC123",
                            SeatsBooked = 5,
                            ShowId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "Hipster@Manjaho.se",
                            IsValid = true,
                            ReservationCode = "A1B2C3",
                            SeatsBooked = 12,
                            ShowId = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "WillSmith@bitchslap.com",
                            IsValid = true,
                            ReservationCode = "BE8D7K",
                            SeatsBooked = 6,
                            ShowId = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "Bert@Stenrik.com",
                            IsValid = true,
                            ReservationCode = "L7N5ER",
                            SeatsBooked = 41,
                            ShowId = 2
                        },
                        new
                        {
                            Id = 5,
                            Email = "JanEmanuel@NotReallyABillonarie.com",
                            IsValid = true,
                            ReservationCode = "NFD76T",
                            SeatsBooked = 4,
                            ShowId = 2
                        },
                        new
                        {
                            Id = 6,
                            Email = "Tinder@Swindler.com",
                            IsValid = true,
                            ReservationCode = "J3FF21",
                            SeatsBooked = 2,
                            ShowId = 3
                        },
                        new
                        {
                            Id = 7,
                            Email = "Larare@Lagstadieskolan.se",
                            IsValid = true,
                            ReservationCode = "Y0LO14",
                            SeatsBooked = 21,
                            ShowId = 4
                        },
                        new
                        {
                            Id = 8,
                            Email = "JanneOskon@hatarsmabarn.se",
                            IsValid = true,
                            ReservationCode = "B0JG4E",
                            SeatsBooked = 7,
                            ShowId = 4
                        });
                });

            modelBuilder.Entity("Domain.Entity.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointReview")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReserveCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TextReview")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Domain.Entity.Saloon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClosedAfter")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaintenanceBuffer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OpenFrom")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seats")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Saloons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClosedAfter = 2300,
                            MaintenanceBuffer = 20,
                            Name = "Tranan",
                            OpenFrom = 1000,
                            Seats = 45
                        });
                });

            modelBuilder.Entity("Domain.Entity.Show", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookedSeats")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FullDateAndTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaloonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("SaloonId");

                    b.ToTable("Shows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookedSeats = 0,
                            FullDateAndTime = new DateTime(2022, 4, 20, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsUsed = false,
                            MovieId = 1,
                            Price = 90,
                            SaloonId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookedSeats = 0,
                            FullDateAndTime = new DateTime(2022, 4, 21, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            IsUsed = false,
                            MovieId = 2,
                            Price = 90,
                            SaloonId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookedSeats = 0,
                            FullDateAndTime = new DateTime(2022, 4, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsUsed = false,
                            MovieId = 1,
                            Price = 90,
                            SaloonId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookedSeats = 0,
                            FullDateAndTime = new DateTime(2022, 4, 22, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            IsUsed = false,
                            MovieId = 1,
                            Price = 90,
                            SaloonId = 1
                        });
                });

            modelBuilder.Entity("Domain.Entity.Reservation", b =>
                {
                    b.HasOne("Domain.Entity.Show", "show")
                        .WithMany()
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("show");
                });

            modelBuilder.Entity("Domain.Entity.Review", b =>
                {
                    b.HasOne("Domain.Entity.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Domain.Entity.Show", b =>
                {
                    b.HasOne("Domain.Entity.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.Saloon", "Saloon")
                        .WithMany()
                        .HasForeignKey("SaloonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Saloon");
                });
#pragma warning restore 612, 618
        }
    }
}
